1.Mostra la risposta alla query in LN in modo netto e non discorsivo.

-----------------------------------------------------------------------

Query 1: 3 AgriParcel

-----------------------------------------------------------------------

Query 2: urn:ngsi-ld:Device:unibo:133a623a4e1cd32cdeaa7303d38f8333, urn:ngsi-ld:Device:unibo:a316ef4f55a925842cca39af7280f4d8, urn:ngsi-ld:Device:unibo:0030d9e3116f5d4d3e5876b62e5144a6

-----------------------------------------------------------------------

Query 3: 48 Device con controlledProperty soilMoisture

-----------------------------------------------------------------------

Query 4: 48 sensori di umidita del suolo distribuiti nei tre lotti T0, T1 alto, T1 basso, T2 alto, T2 basso dell'azienda ZESPRI

-----------------------------------------------------------------------

Query 5: Tutti e 3 i lotti coltivano kiwi varieta Kiwi G3: Fondo Errano 2024 T0, Fondo Errano 2024 T1, Fondo Errano 2024 T2

-----------------------------------------------------------------------

Query 6: 2 dispositivi di irrigazione a goccia: Dripper Fondo Errano 2024 T1 T1 alto, Dripper Fondo Errano 2024 T1 T1 basso

-----------------------------------------------------------------------

Query 7: Ges v20_0 con id urn:ngsi-ld:Device:unibo:fabb65ec5178be7d3e0f7c1e8210cfdc, valore -2500

-----------------------------------------------------------------------

Query 8: Soil moisture sensor grid Fondo Errano 2024 T1 T1 alto con coordinate 11.799328, 44.235394

-----------------------------------------------------------------------

Query 9: T1 e T2 hanno entrambi 4 dispositivi

-----------------------------------------------------------------------

2.Mostra quale la query SQL + Cypher da te usata per ottenere la risposta data nel punto 1

---------------------------------------------------------------------------------------------

Query 1:
SELECT * FROM cypher('agri_graph', $$ 
MATCH (farm:AgriFarm {name: 'ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA'})<-[:belongsTo]-(parcel:AgriParcel) 
RETURN COUNT(parcel) as num_parcels 
$$) as (num_parcels agtype);

---------------------------------------------------------------------------------------------

Query 2:
SELECT * FROM cypher('agri_graph', $$ 
MATCH (parcel:AgriParcel {name: 'Fondo Errano 2024 T0'})<-[:belongsTo]-(device:Device) 
RETURN device.id as device_id 
$$) as (device_id agtype);

---------------------------------------------------------------------------------------------

Query 3:
SELECT * FROM cypher('agri_graph', $$ 
MATCH (device:Device) 
WHERE 'soilMoisture' = ANY(device.controlledProperty) 
RETURN device.id as device_id, device.name as device_name 
$$) as (device_id agtype, device_name agtype);

---------------------------------------------------------------------------------------------

Query 4:
SELECT * FROM cypher('agri_graph', $$ 
MATCH (farm:AgriFarm {name: 'ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA'})<-[:belongsTo]-(parcel:AgriParcel)<-[:belongsTo]-(device:Device) 
WHERE 'soilMoisture' = ANY(device.controlledProperty) 
RETURN device.id as device_id, device.name as device_name, device.value as moisture_value, parcel.name as parcel_name 
ORDER BY parcel_name, device.name 
$$) as (device_id agtype, device_name agtype, moisture_value agtype, parcel_name agtype);

---------------------------------------------------------------------------------------------

Query 5:
SELECT * FROM cypher('agri_graph', $$ 
MATCH (farm:AgriFarm {name: 'ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA'})<-[:belongsTo]-(parcel:AgriParcel) 
WHERE parcel.colture =~ '(?i).*kiwi.*' 
RETURN parcel.name as parcel_name, parcel.colture as crop_type 
$$) as (parcel_name agtype, crop_type agtype);

---------------------------------------------------------------------------------------------

Query 6:
SELECT * FROM cypher('agri_graph', $$ 
MATCH (parcel:AgriParcel)<-[:belongsTo]-(device:Device) 
WHERE parcel.name =~ '.*T1.*' 
AND parcel.irrigationSystemType = 'Drip irrigation' 
AND 'dripper' = ANY(device.controlledProperty) 
RETURN device.id as device_id, device.name as device_name, parcel.name as parcel_name 
$$) as (device_id agtype, device_name agtype, parcel_name agtype);

---------------------------------------------------------------------------------------------

Query 7:
SELECT * FROM cypher('agri_graph', $$ 
MATCH (device:Device) 
WHERE 'soilMoisture' = ANY(device.controlledProperty) 
AND device.value IS NOT NULL 
WITH device, device.value[0] as moisture_value 
RETURN device.id as device_id, device.name as device_name, moisture_value 
ORDER BY moisture_value ASC 
LIMIT 1 
$$) as (device_id agtype, device_name agtype, moisture_value agtype);

---------------------------------------------------------------------------------------------

Query 8:
SELECT * FROM cypher('agri_graph', $$ 
MATCH (device:Device) 
WHERE device.location IS NOT NULL 
WITH device, 
point({longitude: 11.799, latitude: 44.235}) as target_point, 
point(device.location) as device_point 
RETURN device.id as device_id, 
device.name as device_name, 
device.location as device_location, 
point.distance(target_point, device_point) as distance 
ORDER BY distance ASC 
LIMIT 1 
$$) as (device_id agtype, device_name agtype, device_location agtype, distance agtype);

---------------------------------------------------------------------------------------------

Query 9:
SELECT * FROM cypher('agri_graph', $$ 
MATCH (farm:AgriFarm {name: 'ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA'})<-[:belongsTo]-(parcel:AgriParcel)<-[:belongsTo]-(device:Device) 
WITH parcel, COUNT(device) as device_count 
RETURN parcel.name as parcel_name, device_count 
ORDER BY device_count DESC 
LIMIT 1 
$$) as (parcel_name agtype, device_count agtype);

---------------------------------------------------------------------------------------------

3.Spiega e argomenta il motivo del tuo ragionamento, che ti ha indotto a creare la query SQL + Cypher del punto 2.
4.Fammi vedere proprio i collegamenti che hai fatto tra nodi e archi.

-------------------------------------------------------------------------------------------------------------------

Query 1:
Ho costruito un pattern che parte dal nodo AgriFarm con il nome specificato e segue le relazioni belongsTo in direzione inversa usando la freccia verso sinistra per trovare gli AgriParcel collegati. Nel grafo JSON le relazioni belongsTo partono dagli AgriParcel verso l'AgriFarm quindi ho invertito la direzione nel pattern. Ho poi usato COUNT per contare i nodi risultanti.

Collegamenti: Nodo AgriFarm con id 1407374883553284 e name ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA collegato tramite archi belongsTo ai tre nodi AgriParcel con id 1125899906842632 nome Fondo Errano 2024 T0, id 1125899906842633 nome Fondo Errano 2024 T2 e id 1125899906842634 nome Fondo Errano 2024 T1.

-------------------------------------------------------------------------------------------------------------------

Query 2:
Ho identificato l'AgriParcel tramite la proprieta name e seguito le relazioni belongsTo in direzione inversa per trovare i Device collegati. Gli edges nel JSON mostrano che i Device hanno relazioni belongsTo che puntano agli AgriParcel quindi ho invertito la direzione nel pattern Cypher. Ho estratto solo gli id dei Device trovati.

Collegamenti: Nodo AgriParcel con id 1125899906842632 e name Fondo Errano 2024 T0 collegato tramite archi belongsTo di tipo 1970324836974917 e 1970324836974922 ai nodi Device con id 3096224743817240 e id 3096224743817245. La proprieta hasDevice dell'AgriParcel contiene anche l'id urn:ngsi-ld:Device:unibo:133a623a4e1cd32cdeaa7303d38f8333 che rappresenta un altro Device collegato.

-------------------------------------------------------------------------------------------------------------------

Query 3:
Ho scansionato tutti i nodi di tipo Device e filtrato quelli con soilMoisture nella proprieta controlledProperty. Ho usato l'operatore ANY perche controlledProperty e un array. Nel JSON ho verificato che i Device hanno controlledProperty come array che puo contenere valori come soilMoisture o dripper.

Collegamenti: Tutti i nodi Device con label Device e controlledProperty contenente soilMoisture. Questi includono tutti i sensori con naming convention Ges vYY_XX dove YY indica la profondita in centimetri e XX la posizione orizzontale. Esempi sono Device con id 3096224743817252 name Ges v60_52, id 3096224743817253 name Ges v60_80, id 3096224743817254 name Ges v40_0.

-------------------------------------------------------------------------------------------------------------------

Query 4:
Ho costruito un path che attraversa tre livelli gerarchici partendo da AgriFarm passando per AgriParcel e arrivando a Device. Ho usato due relazioni belongsTo consecutive per collegare i livelli e filtrato i Device per controlledProperty soilMoisture. Questo cattura il contesto semantico completo ovvero sensori di umidita specifici dell'azienda ZESPRI.

Collegamenti: AgriFarm ZESPRI collegata tramite belongsTo ai tre AgriParcel T0 T1 T2 che sono a loro volta collegati tramite belongsTo ai Device grid. I Device grid contengono array hasDevice con sensori individuali. Path completi sono ZESPRI verso T0 verso Soil moisture sensor grid T0 verso 12 sensori, ZESPRI verso T1 verso grid T1 alto verso 12 sensori e grid T1 basso verso 8 sensori, ZESPRI verso T2 verso grid T2 alto verso 12 sensori e grid T2 basso verso 12 sensori.

-------------------------------------------------------------------------------------------------------------------

Query 5:
Ho costruito una query che parte dall'AgriFarm e filtra gli AgriParcel usando la proprieta colture. Ho usato una regex case-insensitive per cercare la parola kiwi nel campo colture. Nel JSON tutti gli AgriParcel hanno colture Kiwi G3 quindi la regex cattura tutti i lotti.

Collegamenti: Nodo AgriFarm con name ZESPRI collegato tramite archi belongsTo invertiti ai tre nodi AgriParcel. AgriParcel con id 1125899906842632 name Fondo Errano 2024 T0 colture Kiwi G3, id 1125899906842633 name Fondo Errano 2024 T2 colture Kiwi G3, id 1125899906842634 name Fondo Errano 2024 T1 colture Kiwi G3.

-------------------------------------------------------------------------------------------------------------------

Query 6:
Ho costruito una query con tre criteri il lotto deve contenere T1 nel nome usando regex, l'AgriParcel deve avere irrigationSystemType uguale a Drip irrigation, il Device deve avere controlledProperty dripper. Questa combinazione cattura i dispositivi di irrigazione a goccia nel contesto specifico del lotto T1.

Collegamenti: Nodo AgriParcel con id 1125899906842634 name Fondo Errano 2024 T1 e irrigationSystemType Drip irrigation collegato tramite archi belongsTo ai nodi Device con id 3096224743817241 name Dripper Fondo Errano 2024 T1 T1 alto controlledProperty dripper e id 3096224743817242 name Dripper Fondo Errano 2024 T1 T1 basso controlledProperty dripper.

-------------------------------------------------------------------------------------------------------------------

Query 7:
Ho scansionato tutti i Device con controlledProperty soilMoisture ed estratto il primo elemento dell'array value. Ho ordinato in modo ascendente per trovare il minimo. La proprieta value e un array anche se contiene un solo elemento quindi ho usato value[0] per estrarre il numero.

Collegamenti: Scansione di tutti i Device con controlledProperty soilMoisture. Il Device con id 3096224743817246 name Ges v20_0 ha value -2500 che e il minimo. Altri Device con stesso valore minimo sono id 3096224743817247 name Ges v20_26, id 3096224743817265 name Ges v40_-26, id 3096224743817270 name Ges v20_-26 e altri 4 sensori.

-------------------------------------------------------------------------------------------------------------------

Query 8:
Ho usato le funzioni geometriche di Cypher per calcolare la distanza tra il punto target e tutti i Device con proprieta location. Ho creato un punto target dalle coordinate fornite estratto le coordinate da ogni Device usando la funzione point e calcolato la distanza euclidea con point.distance. Ho ordinato per distanza crescente e preso il primo risultato.

Collegamenti: Analisi di tutti i Device con proprieta location non null. Device analizzati includono Dripper Fondo Errano 2024 T0 T0 con location POINT 11.798998 44.235024, Dripper Fondo Errano 2024 T1 T1 alto con location POINT 11.799328 44.235394, Dripper Fondo Errano 2024 T1 T1 basso con location POINT 11.800613 44.234509, Dripper Fondo Errano 2024 T2 T2 alto con location POINT 11.799925 44.235401, Dripper Fondo Errano 2024 T2 T2 basso con location POINT 11.800711 44.234904 e le 5 griglie di sensori.

-------------------------------------------------------------------------------------------------------------------

Query 9:
Ho usato un pattern MATCH per attraversare la gerarchia Farm verso Parcel verso Device. Ho raggruppato i risultati per AgriParcel usando WITH e contato i Device con COUNT. Ho ordinato per conteggio decrescente e preso il primo risultato per trovare il lotto con piu dispositivi.

Collegamenti: AgriFarm ZESPRI collegata ai tre AgriParcel. Conteggio per T0 Fondo Errano 2024 T0 include Device Dripper T0 e Soil moisture sensor grid T0 totale 2 dispositivi. Conteggio per T1 Fondo Errano 2024 T1 include Device Dripper T1 alto Dripper T1 basso Soil moisture sensor grid T1 alto Soil moisture sensor grid T1 basso totale 4 dispositivi. Conteggio per T2 Fondo Errano 2024 T2 include Device Dripper T2 alto Dripper T2 basso Soil moisture sensor grid T2 alto Soil moisture sensor grid T2 basso totale 4 dispositivi.

-------------------------------------------------------------------------------------------------------------------

5.Dimmi se hai dovuto intuire o ipotizzare su nodi/archi/semantica. Ovvero se ce stato un momento in cui non avevi certezza in quello che facevi.

--------------------------------------------------------------------------------------------------------------------------------------------

Query 1:
Nessuna ipotesi particolare. La struttura del grafo e chiara il campo belongsTo nelle proprieta degli AgriParcel corrisponde alle relazioni belongsTo negli edges e la direzione e esplicita nel JSON.

--------------------------------------------------------------------------------------------------------------------------------------------

Query 2:
C'e una discrepancia tra la proprieta hasDevice dell'AgriParcel che contiene un array di ID Device e le relazioni belongsTo effettive negli edges. Ho riportato tutti i Device collegati attraverso le relazioni del grafo che rappresentano la struttura effettiva ma l'array hasDevice potrebbe contenere riferimenti aggiuntivi non esplicitati come edges.

--------------------------------------------------------------------------------------------------------------------------------------------

Query 3:
Nessuna incertezza. La struttura e chiara tutti i Device con naming Ges vXX_YY hanno controlledProperty soilMoisture mentre i Device Dripper hanno controlledProperty dripper. Alcuni Device complessi contengono array hasDevice con sensori nested ma tutti mantengono la stessa proprieta controlledProperty.

--------------------------------------------------------------------------------------------------------------------------------------------

Query 4:
Ho dovuto interpretare la struttura gerarchica dei Device. Esistono Device grid che contengono altri Device nested nell'array hasDevice. Ho considerato tutti i sensori sia quelli di primo livello che quelli nested perche tutti rappresentano punti fisici di misurazione. La query potrebbe essere modificata per restituire solo i Device grid o solo i sensori individuali a seconda dell'interpretazione.

--------------------------------------------------------------------------------------------------------------------------------------------

Query 5:
Nessuna incertezza. La proprieta colture e esplicitamente definita per tutti gli AgriParcel nel JSON. Ho usato una regex per rendere la query piu flessibile anche se il dato fosse scritto diversamente in futuro.

--------------------------------------------------------------------------------------------------------------------------------------------

Query 6:
Ho assunto che dispositivi di irrigazione a goccia si riferisca ai Device con controlledProperty dripper in un AgriParcel con irrigationSystemType Drip irrigation. Questa e un'interpretazione ragionevole basata sulla struttura del grafo ma potrebbe essere necessario verificare se ci sono altri tipi di dispositivi di irrigazione non catturati da questa logica.

--------------------------------------------------------------------------------------------------------------------------------------------

Query 7:
Ho dovuto fare un'ipotesi importante. Il valore -2500 sembra essere un valore anomalo probabilmente indica un sensore non funzionante o non calibrato. Se escludessimo questi valori anomali il valore piu basso reale sarebbe diverso. I valori nell'intervallo da -20 a -110 sembrano piu plausibili per misurazioni di umidita del suolo. Tuttavia senza conoscenza del dominio specifica ho riportato il valore minimo assoluto trovato nei dati.

--------------------------------------------------------------------------------------------------------------------------------------------

Query 8:
Ho dovuto fare un'assunzione importante sulla sintassi. La proprieta location nel JSON e una stringa nel formato POINT lon lat ma Cypher AGE potrebbe richiedere una conversione specifica. La funzione point device.location potrebbe non funzionare direttamente se AGE non supporta il parsing automatico. In tal caso sarebbe necessario estrarre manualmente longitudine e latitudine dalla stringa usando regex o split con una query alternativa che usa toFloat e split per parsare la stringa location.

--------------------------------------------------------------------------------------------------------------------------------------------

Query 9:
Ho dovuto decidere cosa considerare come dispositivo. Ho contato solo i Device di primo livello che sono direttamente collegati all'AgriParcel tramite belongsTo. Non ho contato i sensori individuali nested all'interno delle griglie nell'array hasDevice perche altrimenti i numeri sarebbero molto diversi. Se dovessimo contare anche i sensori nested T1 avrebbe circa 20 sensori totali, T2 avrebbe circa 24 sensori totali e T0 avrebbe circa 12 sensori. La scelta dipende dall'interpretazione di dispositivo nel contesto della domanda.

--------------------------------------------------------------------------------------------------------------------------------------------