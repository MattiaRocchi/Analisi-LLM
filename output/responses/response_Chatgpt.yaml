response_set: responses generated for the agricultural graph ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA
query_set:
- id: Q1
  description: Elenca tutte le parcelle (AgriParcel) appartenenti alla farm ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA.
  query: "SELECT * FROM cypher('agri_graph', $$\n  MATCH (f:AgriFarm {name:'ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA'})-[:HAS_AGRIPARCEL]->(p:AgriParcel)\n  RETURN f.name AS farm_name, collect(p.name) AS parcels\n$$) AS (farm_name text, parcels agtype);"
- id: Q2
  description: Mostra per ogni AgriParcel il tipo di coltura e il sistema di irrigazione.
  query: "SELECT * FROM cypher('agri_graph', $$\n  MATCH (p:AgriParcel)-[:BELONGS_TO]->(f:AgriFarm {name:'ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA'})\n  RETURN p.name AS parcel_name, p.colture AS crop_type, p.irrigationSystemType AS irrigation_system\n$$) AS (parcel_name text, crop_type text, irrigation_system text);"
- id: Q3
  description: Trova tutti i dispositivi (Device) associati alle parcelle della farm.
  query: "SELECT * FROM cypher('agri_graph', $$\n  MATCH (f:AgriFarm {name:'ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA'})-[:HAS_AGRIPARCEL]->(p:AgriParcel)-[:HAS_DEVICE]->(d:Device)\n  RETURN p.name AS parcel_name, collect(d.name) AS devices\n$$) AS (parcel_name text, devices agtype);"
- id: Q4
  description: Estrai tutti i sensori di tipo dripper e la parcella a cui appartengono.
  query: "SELECT * FROM cypher('agri_graph', $$\n  MATCH (d:Device)-[:BELONGS_TO]->(p:AgriParcel)-[:BELONGS_TO]->(f:AgriFarm {name:'ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA'})\n  WHERE 'dripper' IN d.controlledProperty\n  RETURN p.name AS parcel_name, d.name AS dripper_device, d.location AS position\n$$) AS (parcel_name text, dripper_device text, position text);"
- id: Q5
  description: Recupera la lista di sensori soilMoisture per ogni parcella e i relativi valori.
  query: "SELECT * FROM cypher('agri_graph', $$\n  MATCH (p:AgriParcel)-[:HAS_DEVICE]->(grid:Device)-[:HAS_DEVICE]->(d:Device)\n  WHERE 'soilMoisture' IN d.controlledProperty\n  RETURN p.name AS parcel_name, collect({sensor:d.name, value:d.value}) AS soil_sensors\n$$) AS (parcel_name text, soil_sensors agtype);"
- id: Q6
  description: Calcola il valore medio dell'umiditÃ  del suolo per ciascuna parcella.
  query: "SELECT * FROM cypher('agri_graph', $$\n  MATCH (p:AgriParcel)-[:HAS_DEVICE]->(grid:Device)-[:HAS_DEVICE]->(d:Device)\n  WHERE 'soilMoisture' IN d.controlledProperty AND d.value[0] > -1000\n  RETURN p.name AS parcel_name, avg(d.value[0]) AS avg_soil_moisture\n$$) AS (parcel_name text, avg_soil_moisture float8);"
- id: Q7
  description: Mostra la posizione geografica (POLYGON) di ogni parcella.
  query: "SELECT * FROM cypher('agri_graph', $$\n  MATCH (p:AgriParcel)-[:BELONGS_TO]->(f:AgriFarm {name:'ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA'})\n  RETURN p.name AS parcel_name, p.location AS geometry\n$$) AS (parcel_name text, geometry text);"
- id: Q8
  description: Recupera i dispositivi che hanno valori anomali (value < -1000) e la parcella di appartenenza.
  query: "SELECT * FROM cypher('agri_graph', $$\n  MATCH (p:AgriParcel)-[:HAS_DEVICE]->(grid:Device)-[:HAS_DEVICE]->(d:Device)\n  WHERE d.value[0] < -1000\n  RETURN p.name AS parcel_name, d.name AS sensor_name, d.value[0] AS value\n$$) AS (parcel_name text, sensor_name text, value float8);"
- id: Q9
  description: Conta quanti sensori totali di soilMoisture sono installati per ogni parcella.
  query: "SELECT * FROM cypher('agri_graph', $$\n  MATCH (p:AgriParcel)-[:HAS_DEVICE]->(grid:Device)-[:HAS_DEVICE]->(d:Device)\n  WHERE 'soilMoisture' IN d.controlledProperty\n  RETURN p.name AS parcel_name, count(d) AS num_sensors\n$$) AS (parcel_name text, num_sensors int);"
