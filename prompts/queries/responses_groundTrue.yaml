responses_results:
  - id: Q1
    query: |
      SELECT COUNT(*) AS num_parcels FROM cypher('agri_graph', $$
        MATCH (farm:AgriFarm {name: 'ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA'})-[:hasDevice]->(parcel:AgriParcel)
        RETURN COUNT(parcel) AS num_parcels
      $$) AS (num_parcels agtype);

  - id: Q2
    query: |
      SELECT device_id FROM cypher('agri_graph', $$
        MATCH (parcel:AgriParcel {name: 'Fondo Errano 2024 T0'})-[:hasDevice]->(device:Device)
        RETURN device.id AS device_id
      $$) AS (device_id agtype);

  - id: Q3
    query: |
      SELECT device_id, device_name FROM cypher('agri_graph', $$
        MATCH (device:Device)
        WHERE device.name CONTAINS 'Ges v' OR device.name CONTAINS 'Soil moisture'
        RETURN device.id AS device_id, device.name AS device_name
      $$) AS (device_id agtype, device_name agtype);

  - id: Q4
    query: |
      SELECT device_id, device_name, parcel_name FROM cypher('agri_graph', $$
        MATCH (farm:AgriFarm {name: 'ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA'})-[:hasDevice]->(parcel:AgriParcel)-[:hasDevice]->(sensor:Device)
        WHERE sensor.name CONTAINS 'Ges v' OR sensor.name CONTAINS 'Soil moisture'
        RETURN sensor.id AS device_id, sensor.name AS device_name, parcel.name AS parcel_name
      $$) AS (device_id agtype, device_name agtype, parcel_name agtype);

  - id: Q5
    query: |
      SELECT parcel_name FROM cypher('agri_graph', $$
        MATCH (farm:AgriFarm {name: 'ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA'})-[:hasDevice]->(parcel:AgriParcel)
        RETURN parcel.name AS parcel_name
      $$) AS (parcel_name agtype);

  - id: Q6
    query: |
      SELECT device_id, device_name FROM cypher('agri_graph', $$
        MATCH (parcel:AgriParcel {name: 'Fondo Errano 2024 T1'})-[:hasDevice]->(device:Device)
        WHERE device.name CONTAINS 'Dripper'
        RETURN device.id AS device_id, device.name AS device_name
      $$) AS (device_id agtype, device_name agtype);

  - id: Q7
    query: |
      SELECT device_id, device_name FROM cypher('agri_graph', $$
        MATCH (sensor:Device)
        WHERE sensor.name CONTAINS 'Ges v' OR sensor.name CONTAINS 'Soil moisture'
        RETURN sensor.id AS device_id, sensor.name AS device_name
        LIMIT 1
      $$) AS (device_id agtype, device_name agtype);

  - id: Q8
    query: |
      SELECT device_id, device_name, location FROM cypher('agri_graph', $$
        MATCH (device:Device)
        WHERE device.location IS NOT NULL
        WITH device, 
             split(split(device.location, '(')[1], ' ')[0] AS lon_str,
             split(split(split(device.location, '(')[1], ' ')[1], ')')[0] AS lat_str
        WITH device, 
             toFloat(lon_str) AS lon, 
             toFloat(lat_str) AS lat,
             sqrt((lon - 11.799)^2 + (lat - 44.235)^2) AS distance
        RETURN device.id AS device_id, device.name AS device_name, device.location AS location
        ORDER BY distance ASC 
        LIMIT 1
      $$) AS (device_id agtype, device_name agtype, location agtype);

  - id: Q9
    query: |
      SELECT parcel_name, device_count
      FROM cypher('agri_graph', $$
        MATCH (farm:AgriFarm {name: 'ZESPRI AZ. AGR. DALLE FABBRICHE ANDREA'})-[:hasDevice]->(parcel:AgriParcel)
        OPTIONAL MATCH (parcel)-[:hasDevice]->(device:Device)
        WITH parcel, COUNT(device) AS device_count
        RETURN parcel.name AS parcel_name, device_count
        ORDER BY device_count DESC 
        LIMIT 1
      $$) AS (parcel_name agtype, device_count agtype);